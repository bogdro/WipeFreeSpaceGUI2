/*
 * AboutBox.java, part of the WipeFreeSpaceGUI2 package.
 *
 * Copyright (C) 2022 Bogdan Drozdowski, bogdro (at) users . sourceforge . net
 * License: GNU General Public License, v3+
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package BogDroSoft.wfsgui.gui;

import BogDroSoft.wfsgui.Utils;
import java.awt.Desktop;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.io.InputStream;
import java.net.URI;

/**
 * The "About..." window box, containing the program name, its version number,
 * author, license and all the necessary stuff.
 * @author Bogdan Drozdowski
 */
public class AboutBox extends javax.swing.JDialog
{
	private static final String EMAIL_ADDR = "bogdro@users.sourceforge.net";	// NOI18N
	private static final String WWW_ADDR1 = "https://wipefreespace.sourceforge.io/";		// NOI18N
	private static final String WWW_ADDR2 = "http://bogdro.users.sourceforge.net/";	// NOI18N
	private static final URI URI_MAILTO =
		createURI("mailto", EMAIL_ADDR + "?subject=[SOFT] - WipeFreeSpaceGUI2");		// NOI18N
	private static final URI URI_WWW1 = createWebURI(WWW_ADDR1);
	private static final URI URI_WWW2 = createWebURI(WWW_ADDR2);

	/**
	 * Creates new form AboutBox.
	 * @param parent The parent frame.
	 * @param modal Whether this dialog box should be modal.
	 * @param fontSize The font size for this window.
	 */
	public AboutBox(Frame parent, boolean modal, float fontSize)
	{
		super(parent, modal);
		initComponents();

		UiUtils.changeSizeToScreen(this);

		fontSizeSpinner.setValue (fontSize);	// refresh the font in the window

		/* add the Esc key listener to the frame and all components. */
		new EscKeyListener (this).install();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents()
        {

                mainScrollPane = new javax.swing.JScrollPane();
                mainPanel = new javax.swing.JPanel();
                wfsGuiLabel = new javax.swing.JLabel();
                authorLabel = new javax.swing.JLabel();
                authorValLabel = new javax.swing.JLabel();
                wwwLabel = new javax.swing.JLabel();
                fontSizeSpinner = new javax.swing.JSpinner();
                fontSizeLabel = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                licenseArea = new javax.swing.JTextArea();
                emailLabel = new javax.swing.JLabel();
                www1Label = new javax.swing.JLabel();
                www2Label = new javax.swing.JLabel();
                licLabel = new javax.swing.JLabel();
                licValue = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("BogDroSoft/wfsgui/i18n/AboutBox"); // NOI18N
                setTitle(bundle.getString("about_title")); // NOI18N

                wfsGuiLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BogDroSoft/wfsgui/rsrc/about.png"))); // NOI18N
                wfsGuiLabel.setText("WipeFreeSpaceGUI2 " /* NOI18N */ + WfsMainWindow.WFSGUI_VERSION);

                authorLabel.setLabelFor(authorValLabel);
                authorLabel.setText(bundle.getString("lab_author")); // NOI18N

                authorValLabel.setText("Bogdan Drozdowski");

                wwwLabel.setText(bundle.getString("lab_www")); // NOI18N

                fontSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(12, 0, null, 1));
                fontSizeSpinner.addChangeListener(new javax.swing.event.ChangeListener()
                {
                        public void stateChanged(javax.swing.event.ChangeEvent evt)
                        {
                                fontSizeSpinnerStateChanged(evt);
                        }
                });

                fontSizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                fontSizeLabel.setLabelFor(fontSizeSpinner);
                fontSizeLabel.setText(bundle.getString("font_size")); // NOI18N

                licenseArea.setEditable(false);
                licenseArea.setColumns(20);
                licenseArea.setRows(3);
                licenseArea.setText(getFileContents (getClass ().getClassLoader ().getResourceAsStream ("BogDroSoft/wfsgui/rsrc/GNU-GPLv3.txt" /* NOI18N */)));
                licenseArea.setCaretPosition(0);
                jScrollPane1.setViewportView(licenseArea);

                emailLabel.setText("<html><a href=\"mailto:" + EMAIL_ADDR + "\">" + EMAIL_ADDR + "</a></html>");
                emailLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                emailLabel.addMouseListener(new java.awt.event.MouseAdapter()
                {
                        public void mouseClicked(java.awt.event.MouseEvent evt)
                        {
                                emailLabelMouseClicked(evt);
                        }
                });

                www1Label.setText("<html><a href=\"" + WWW_ADDR1 + "\">" + WWW_ADDR1 + "</a></html>");
                www1Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                www1Label.addMouseListener(new java.awt.event.MouseAdapter()
                {
                        public void mouseClicked(java.awt.event.MouseEvent evt)
                        {
                                www1LabelMouseClicked(evt);
                        }
                });

                www2Label.setText("<html><a href=\"" + WWW_ADDR2 + "\">" + WWW_ADDR2 + "</a></html>");
                www2Label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                www2Label.addMouseListener(new java.awt.event.MouseAdapter()
                {
                        public void mouseClicked(java.awt.event.MouseEvent evt)
                        {
                                www2LabelMouseClicked(evt);
                        }
                });

                licLabel.setText(bundle.getString("License:_")); // NOI18N

                licValue.setText("GPLv3+"); // NOI18N

                javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
                mainPanel.setLayout(mainPanelLayout);
                mainPanelLayout.setHorizontalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addComponent(wfsGuiLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(fontSizeLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(authorLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(authorValLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(emailLabel))
                                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(wwwLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(www2Label)
                                                                        .addComponent(www1Label)))
                                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(licLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(licValue)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                mainPanelLayout.setVerticalGroup(
                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wfsGuiLabel)
                                        .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fontSizeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(authorLabel)
                                        .addComponent(authorValLabel)
                                        .addComponent(emailLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(wwwLabel)
                                        .addComponent(www1Label))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(www2Label)
                                .addGap(5, 5, 5)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(licLabel)
                                        .addComponent(licValue))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                .addContainerGap())
                );

                java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("BogDroSoft/wfsgui/i18n/WfsMainWindow"); // NOI18N
                fontSizeSpinner.getAccessibleContext().setAccessibleName(bundle1.getString("font_size_spinner.accname")); // NOI18N
                fontSizeSpinner.getAccessibleContext().setAccessibleDescription(bundle1.getString("font_size_spinner.accdesc")); // NOI18N

                mainScrollPane.setViewportView(mainPanel);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainScrollPane)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainScrollPane)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void fontSizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_fontSizeSpinnerStateChanged
        {//GEN-HEADEREND:event_fontSizeSpinnerStateChanged
                UiUtils.setFontSize (this, UiUtils.getFontSize (fontSizeSpinner));
        }//GEN-LAST:event_fontSizeSpinnerStateChanged

        private void www1LabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_www1LabelMouseClicked
        {//GEN-HEADEREND:event_www1LabelMouseClicked
                if ( evt.getButton () == MouseEvent.BUTTON1 )
                {
                        if ( Desktop.isDesktopSupported () )
                        {
                                try
                                {
                                        Desktop d = Desktop.getDesktop ();
                                        if ( d != null )
                                        {
                                                if ( d.isSupported (Desktop.Action.BROWSE) )
                                                {
                                                        d.browse (URI_WWW1);
                                                }
                                        }
                                }
                                catch (Exception ex)
                                {
                                        Utils.handleException (ex, "Desktop.browse1");	// NOI18N
                                }
                        }
                }
        }//GEN-LAST:event_www1LabelMouseClicked

        private void www2LabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_www2LabelMouseClicked
        {//GEN-HEADEREND:event_www2LabelMouseClicked

                if ( evt.getButton () == MouseEvent.BUTTON1 )
                {
                        if ( Desktop.isDesktopSupported () )
                        {
                                try
                                {
                                        Desktop d = Desktop.getDesktop ();
                                        if ( d != null )
                                        {
                                                if ( d.isSupported (Desktop.Action.BROWSE) )
                                                {
                                                        d.browse (URI_WWW2);
                                                }
                                        }
                                }
                                catch (Exception ex)
                                {
                                        Utils.handleException (ex, "Desktop.browse2");	// NOI18N
                                }
                        }
                }
        }//GEN-LAST:event_www2LabelMouseClicked

        private void emailLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_emailLabelMouseClicked
        {//GEN-HEADEREND:event_emailLabelMouseClicked
		if ( evt.getButton () == MouseEvent.BUTTON1 )
		{
			if ( Desktop.isDesktopSupported () )
			{
				try
				{
					Desktop d = Desktop.getDesktop ();
					if ( d != null )
					{
						if ( d.isSupported (Desktop.Action.MAIL) )
						{
							d.mail (URI_MAILTO);	// NOI18N
						}
					}
				}
				catch (Exception ex)
				{
					Utils.handleException (ex, "Desktop.mail");	// NOI18N
				}
			}
		}
        }//GEN-LAST:event_emailLabelMouseClicked

	private String getFileContents (InputStream is)
	{
		StringBuilder ret = new StringBuilder (40000);
		byte[] read = new byte[1024];
		int wasRead;
		do
		{
			try
			{
				wasRead = is.read (read);
				ret.append (new String (read, 0, wasRead, "UTF-8"));	// NOI18N
			}
			catch (Exception ex)
			{
				Utils.handleException (ex, "InputStream.read");	// NOI18N
				wasRead = 0;
			}
		} while (wasRead == read.length);
		try
		{
			is.close ();
		}
		catch (Exception ex)
		{
			Utils.handleException (ex, "InputStream.close");	// NOI18N
		}
		return ret.toString ();
	}
	
	private static URI createURI (String uriType, String uri)
	{
		try
		{
			return new URI (uriType, uri, null);
		}
		catch (Exception ex)
		{
			Utils.handleException (ex, "AboutBox.createURI: '" + uri + "'");	// NOI18N
			UiUtils.showErrorMessage(null, ex.toString());
			return null;
		}
	}

	private static URI createWebURI (String webAddr)
	{
		try
		{
			return new URI (webAddr);
		}
		catch (Exception ex)
		{
			Utils.handleException (ex, "AboutBox.createWebURI: '" + webAddr + "'");	// NOI18N
			UiUtils.showErrorMessage(null, ex.toString());
			return null;
		}
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel authorLabel;
        private javax.swing.JLabel authorValLabel;
        private javax.swing.JLabel emailLabel;
        private javax.swing.JLabel fontSizeLabel;
        private javax.swing.JSpinner fontSizeSpinner;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel licLabel;
        private javax.swing.JLabel licValue;
        private javax.swing.JTextArea licenseArea;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JScrollPane mainScrollPane;
        private javax.swing.JLabel wfsGuiLabel;
        private javax.swing.JLabel www1Label;
        private javax.swing.JLabel www2Label;
        private javax.swing.JLabel wwwLabel;
        // End of variables declaration//GEN-END:variables
}
